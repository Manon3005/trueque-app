generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:../src/database/trueque.db"
}

enum State {
  NEW
  LIKE_NEW
  GOOD_CONDITION
  ACCEPTABLE_CONDITION
  WORN
  NEEDS_REPAIR
}

enum Role {
  USER
  ADMIN
}

model User {
  id           Int     @id @default(autoincrement())
  rut          String  @unique
  email        String  @unique
  username     String  @unique
  password     String
  role         Role
  city         String
  region       String
  is_suspended Boolean @default(false)

  // Relations
  products         Product[]
  sentMessages     Message[]   @relation("SentMessages")
  receivedMessages Message[]   @relation("ReceivedMessages")
  favorites        Favorite[]
  denounced        Denounced[]
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  state      State
  location    String
  created_at  DateTime @default(now())
  user_id     Int

  // Relations
  user      User        @relation(fields: [user_id], references: [id])
  images    Image[]
  favorites Favorite[]
  denounced Denounced[]
}

model Image {
  id         Int   @id @default(autoincrement())
  product_id Int
  content    Bytes

  // Relations
  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@unique([product_id, content])
}

model Favorite {
  user_id    Int
  product_id Int

  // Relations
  user    User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@id([user_id, product_id])
}

model Denounced {
  user_id    Int
  product_id Int

  // Relations
  user    User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@id([user_id, product_id])
}

model Message {
  sender_user_id   Int
  receiver_user_id Int
  content          String
  sent_at          DateTime @default(now())
  was_seen         Boolean  @default(false)

  // Relations
  sender   User @relation("SentMessages", fields: [sender_user_id], references: [id], onDelete: Cascade)
  receiver User @relation("ReceivedMessages", fields: [receiver_user_id], references: [id], onDelete: Cascade)

  @@id([sender_user_id, receiver_user_id, sent_at])
}
